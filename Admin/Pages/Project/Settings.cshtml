@page "/project/{slug}/settings"
@model Admin.Pages.Project.SettingsModel
@{
    ViewData["Title"] = "Settings";
}

@section Styles
{
    <Link href="https://cdn.datatables.net/1.13.1/css/jquery.dataTables.min.css" rel="stylesheet" />
    <Link href="https://cdn.datatables.net/responsive/2.4.0/css/responsive.dataTables.min.css" rel="stylesheet" />
    <style>
        .dataTables_scrollBody {
            height: 100% !important;
            max-height: 100% !important;
        }

        table.dataTable thead .sorting,
        table.dataTable thead .sorting_asc,
        table.dataTable thead .sorting_desc {
            background: none;
        }

        .custom-select {
            -webkit-appearance: listbox !important;
        }

    </style>
}

<div class="sticky-header">
    <h3 class="pb-0 m-0">Settings</h3>
    <p class="card-subtitle text-gray m-0">@Model.Project.Name</p>
</div>
<div class="container p-0">
    <div class="columns">
        <div class="column col-auto col-sm-12">
            <ul class="menu submenu">
                <li class="menu-item">
                    <a class="tablinks cursor-pointer" data-tabId="General">General</a>
                </li>
                <li class="menu-item">
                    <a class="tablinks cursor-pointer" data-tabId="UsersAccess">Users access</a>
                </li>
                <li class="menu-item">
                    <a class="tablinks cursor-pointer" data-tabId="ApiKey">API key</a>
                </li>
                <li class="menu-item">
                    <a class="tablinks cursor-pointer" data-tabId="SentEmails">Sent Emails</a>
                </li>
                <li class="menu-item">
                    <a class="tablinks cursor-pointer" data-tabId="ActivityLog">Activity log</a>
                </li>
                <li class="menu-item">
                    <a class="tablinks cursor-pointer" data-tabId="DeleteProject">Delete project</a>
                </li>
            </ul>
        </div>
        <div class="column col" style="max-width: 800px">
            <div id="General" class="tabcontent active">
                <h2>General</h2>
                <form class="form-horizontal" id="createProjectForm" method="post" style="max-width: 800px" onsubmit="return validationFunction(Event)" asp-page-handler="UpdateProject">
                    @Html.HiddenFor(model => model.Project.Id)
                    @Html.HiddenFor(model => model.Project.DateModified)
                    @Html.HiddenFor(model => model.Project.ApiKey)
                    <div class="form-group">
                        <div class="col-3 col-sm-12">
                            <label class="form-label" asp-for="Project.Name">@Html.DisplayNameFor(model => model.Project.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" asp-for="Project.Name" placeholder="@Html.DisplayNameFor(model => model.Project.Name)">
                            <span class="form-input-hint" asp-validation-for="Project.Name"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-3 col-sm-12">
                            <label class="form-label" asp-for="Project.SubHeading">@Html.DisplayNameFor(model => model.Project.SubHeading):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" asp-for="Project.SubHeading" placeholder="@Html.DisplayNameFor(model => model.Project.SubHeading)">
                            <span class="form-input-hint" asp-validation-for="Project.SubHeading"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-3 col-sm-12">
                            <div class="d-flex align-items-center">
                                <label class="form-label d-inline mr-2" asp-for="Project.Description">@Html.DisplayNameFor(model => model.Project.Description):</label>
                                <div class="popover popover-right cursor-pointer" style="align-self:baseline">
                                    <ion-icon name="information-circle-outline" style="font-size:1rem;"></ion-icon>
                                    <div class="popover-container">
                                        <div class="card">
                                            <div class="card-header">
                                                <h4>Markdown support</h4>
                                            </div>
                                            <div class="card-body">
                                                The description field supports markdown formatting.
                                            </div>
                                            <div class="card-footer">
                                                <a href="https://guides.github.com/features/mastering-markdown/" target="_blank" class="btn btn-primary">Markdown guide</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-9 col-sm-12" style="display:grid">
                            <textarea  class="form-input" type="text" asp-for="Project.Description" placeholder="@Html.DisplayNameFor(model => model.Project.Description)"></textarea>
                            <span class="form-input-hint" asp-validation-for="Project.Description"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-3 col-sm-12 d-flex align-items-center">
                            <label class="form-label d-inline  mr-2" asp-for="Project.Tags">@Html.DisplayNameFor(model => model.Project.Tags):</label>
                            <div class="popover popover-right d-flex align-items-center cursor-pointer" style="align-self:baseline">
                                <ion-icon name="information-circle-outline" style="font-size:1rem;"></ion-icon>
                                <div class="popover-container">
                                    <div class="card">
                                        <div class="card-body">
                                            Used to improve project search
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-9 col-sm-12 d-flex">
                            <input class="tags" value="@Model.Project.Tags" />
                            <button type="button">+</button>
                            <input hidden asp-for="Project.Tags">
                        </div>
                    </div>
                    <button type="submit" class="btn float-right">Update</button>
                </form>

            </div>
            <div id="UsersAccess" class="tabcontent">
                <h2>Users access</h2>
                <ul>
                    <li>Create template</li>
                    <li>Edit template</li>
                    <li>Delete template</li>
                    <li>Add template version</li>
                    <li>Edit template version</li>
                    <li>Delete template version</li>
                    <li>Control users access</li>
                    <li>View API key</li>
                    <li>Reset API key</li>
                    <li>View sent email</li>
                    <li>View activity log</li>
                    <li>Delete project</li>
                    <li>Edit general settings</li>
                    <li>Edit general settings</li>
                    <li>Edit general settings</li>
                </ul>
            </div>
            <div id="ApiKey" class="tabcontent">
                <h2>API key</h2>
                <p>API key is used to call the REST api, by adding the projects API key to the calls header <i>'x-api-key'</i></p>
                <div class="api-key-container">
                    <div class="ml-2 user-select-none">
                        <span  id="apiKey" onclick="copyContent()"></span>
                    </div>
                    <div class="dropdown dropdown-right">
                        <button id="apiKeyToggleBtn" onclick="toggleApiKeyVisibility()" class="btn btn-link cursor-pointer" tabindex="0">
                            <ion-icon id="eyeIcon" name="eye-outline" style="font-size:1.3rem"></ion-icon>
                        </button>
                    </div>
                    <div class="dropdown dropdown-right">
                        <button type="submit" class="btn btn-link js-cd-panel-trigger" data-panel="resetApiKey">
                            <ion-icon name="refresh-outline" style="font-size:1.2rem"></ion-icon>
                        </button>
                    </div>
                </div>
            </div>
            <div id="SentEmails" class="tabcontent">
                <h2>Sent emails</h2>
                <table id="sentEmailTable" class="table responsive" width="100%">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Template</th>
                            <th>Status</th>
                            <th>To address(s)</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div id="ActivityLog" class="tabcontent">
                <h2>Activity log</h2>
            </div>
            <div id="DeleteProject" class="tabcontent">
                <h2>Delete project</h2>
                <p>Once you delete a project, there is no going back. Please be certain.</p>
                <button type="submit" class="btn btn-outline-error float-right js-cd-panel-trigger" data-panel="delete">Delete project</button>
            </div>
        </div>
    </div>
</div>

@section Panels{
    @*Reset api key panel*@
        <div class="cd-panel cd-panel--from-right js-cd-panel-resetApiKey" id="resetApiKeyPanel">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Reset project API key</h3>
                <p>Are you sure you want to reset this projects API key?</p>
                <p>This action cannot be undone. This will permanently change the <strong>'@Model.Project.Name'</strong> project API key. This means anything calling the API with the current API key will receive a 401 authentication error, until the API key has been updated.</p>

                <p>To confirm the reset of this project API key, please re-enter the project name <strong>'@Model.Project.Name'</strong></p>

                <div class="form-horizontal"  style="max-width: 800px">
                    <div class="form-group">
                        <div class="col-3 col-sm-12">
                            <label class="form-label" for="resetApiKeyProjectNameConfirmation">@Html.DisplayNameFor(model => model.Project.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                                <input autocomplete="off" class="form-input" type="text" id="resetApiKeyProjectNameConfirmation" placeholder="@Html.DisplayNameFor(model => model.Project.Name)" value="">
                        </div>
                    </div>
                    <button id="resetApiKeySubmitBtn" class="btn float-right btn-outline-error" onclick="resetApiKey()" disabled>I understand the consequences, reset API key</button>
                </div>
            </div>
        </div>
    </div>

    @*Delete template panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-delete">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Delete project</h3>
                <p>Are you sure you want to delete this project?</p>
                <p>This action cannot be undone. This will permanently delete the <strong>'@Model.Project.Name'</strong> project and all associatied email templates. This means any pending emails and any future emails will fail to send.</p>

                <p>To confirm the deletion of this project please re-enter the project name <strong>'@Model.Project.Name'</strong></p>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="DeleteProject">
                    @Html.HiddenFor(model => model.DeleteProjectId)
                    <div class="form-group">
                        <div class="col-3 col-sm-12">
                            <label class="form-label" for="deleteProjectNameConfirmation">@Html.DisplayNameFor(model => model.Project.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" autocomplete="off" type="text" id="deleteProjectNameConfirmation" placeholder="@Html.DisplayNameFor(model => model.Project.Name)" value="">
                        </div>
                    </div>
                    <button type="submit" id="deleteProjecSubmitBtn" class="btn float-right btn-outline-error" disabled>I understand the consequences, delete this project</button>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts{
    @*Markdown editor*@
    <script>
        var simplemde = new SimpleMDE({
            element: document.getElementById("Project_Description"),
            status: false,
            status: [{
		        className: "chars-length",
		        defaultValue: function(el) {
                    el.innerHTML = "0";
                    el.style.marginRight = '-10px';
                    el.style.fontSize = 'unset';
                    el.style.color = '#3b4351';
                },
                onUpdate: function (el) {
                    if (500 - simplemde.value().length > 0) {
                        el.innerHTML = 500 - simplemde.value().length;
                        el.classList.remove('warn');
                        el.style.color = '#3b4351';
                    } else {
                        el.innerHTML = 500 - simplemde.value().length;
                        el.classList.add('warn');
                        el.style.color = '#fff';
                    }
                    
                }
	        }], //  // Another optional usage, with a custom status bar item that counts keystrokes
        });
    </script>
    @*Tabs*@
    <script type="text/javascript">
        var tabLinks = document.querySelectorAll(".tablinks");
        var tabContent = document.querySelectorAll(".tabcontent");

        tabLinks.forEach(function (el) {
            el.addEventListener("click", openTabs);
        });

        function openTabs(el) {
            hideApiKey();

            var btnTarget = el.currentTarget;
            var tabId = btnTarget.getAttribute('data-tabId');
            tabContent.forEach(function (el) {
                el.classList.remove("active");
            });

            tabLinks.forEach(function (el) {
                el.classList.remove("active");
            });

            document.querySelector("#" + tabId).classList.add("active");

            btnTarget.classList.add("active");
        }
    </script>


    <!-- API key -->
    <script>
        // API key visibility
        var currentApiKey = '@Model.Project.ApiKey';

        hideApiKey();

        function hideApiKey(){
            var first5Characters = currentApiKey.substring(0, 4);
            var remainingCharacter = currentApiKey.substring(4);
            var hiddenApiKey = first5Characters
            for (let i = 0; i < remainingCharacter.length; i++) {
                hiddenApiKey += "*";
            }
            document.getElementById("apiKey").innerHTML = hiddenApiKey;
            document.getElementById("apiKey").classList.remove('c-hand');
            document.getElementById("apiKey").classList.add('c-auto');
            document.getElementById("apiKeyToggleBtn").setAttribute('data-isVisible', 'false');
            document.getElementById("eyeIcon").setAttribute('name', 'eye-off-outline');
        }
        function showApiKey(){
            document.getElementById("apiKey").innerHTML = currentApiKey;
            document.getElementById("apiKey").classList.add('c-hand');
            document.getElementById("apiKey").classList.remove('c-auto');
            document.getElementById("apiKeyToggleBtn").setAttribute('data-isVisible', 'true');
            document.getElementById("eyeIcon").setAttribute('name', 'eye-outline');
        }

        function toggleApiKeyVisibility(){
            var isVisible = document.getElementById("apiKeyToggleBtn").getAttribute('data-isVisible');
            if (isVisible == 'true') {
                hideApiKey();
            }else{
                showApiKey();
            }
        }

        document.getElementById("resetApiKeyProjectNameConfirmation").addEventListener('input',
            function (e) {
                var projectName = "@Model.Project.Name";
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim().toLowerCase() != projectName.toLowerCase()) {
                    document.getElementById("resetApiKeySubmitBtn").disabled = true;
                } else {
                    document.getElementById("resetApiKeySubmitBtn").disabled = false;
                }
            });

        // Copy API key
        var removeCopeidPopupTimer;
        const copyContent = async () => {
            try {
                var isVisible = document.getElementById("apiKeyToggleBtn").getAttribute('data-isVisible');
                if (isVisible == 'false') {
                    return;
                }

                await navigator.clipboard.writeText(currentApiKey);

                clearTimeout(removeCopeidPopupTimer);
                removeAllCopiedPopups();

                tippy(document.getElementById('apiKey'), {
                    content: 'Copied!',
                    placement: 'top',
                    showOnCreate: true, 
                    arrow: false,
                    trigger: 'manual',
                    theme: 'customTheme'
                });


                removeCopeidPopupTimer = setTimeout(function () {
                    removeAllCopiedPopups();
                }, 1000);
            } catch (err) {
                console.error('Failed to copy: ', err);
            }
        }
        function removeAllCopiedPopups(){
            var arr = document.querySelectorAll("[data-tippy-root]");
            for (var i = 0; i < arr.length; i++) {
                arr[i].remove();
            }
        }

        // Reset API key
        function resetApiKey(){
            jQuery.ajax({
                type: "PUT",
                url: '?handler=ResetApiKey&ProjectId=@Model.Project.Id',
                headers: { 'RequestVerificationToken': $('@Html.AntiForgeryToken()').val() },
                contentType: "application/json",
                dataType: "json",
                beforeSend: function () {
                    document.getElementById("resetApiKeySubmitBtn").classList.add("loading");
                },
                success: function (data) {
                    currentApiKey = data["apiKey"];
                    showApiKey();

                    document.getElementById("resetApiKeyProjectNameConfirmation").value = "";

                    document.getElementById("resetApiKeyPanel").classList.remove('cd-panel--is-visible');

                    showToast(data['toastTitle'], data['toastStatus']);
                },
                error: function (request, status, error) {
                    showToast('Sorry something has gone wrong', 'error');
                },
                complete: function(){
                    document.getElementById("resetApiKeySubmitBtn").classList.remove("loading");
                }
            });
        }
    </script>

    <!--Delete project-->
    <script>
        document.getElementById("deleteProjectNameConfirmation").addEventListener('input',
            function (e) {
                var projectName = "@Model.Project.Name";
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim().toLowerCase() != projectName.toLowerCase()) {
                    document.getElementById("deleteProjecSubmitBtn").disabled = true;
                } else {
                    document.getElementById("deleteProjecSubmitBtn").disabled = false;
                }
            });
    </script>

    <!-- Character counter -->
    <script type="text/javascript">
        VCountdown({
            target: '#Project_Name',
            maxChars: 200
        });
        VCountdown({
            target: '#Project_SubHeading',
            maxChars: 200
        });
    </script>

    <!-- Tags -->
    <script>
        var input = document.querySelector('.tags');
        var tagify = new Tagify(input,
            {
                delimiters: ',',
                pattern: /^[a-zA-Z0-9äöüÄÖÜ ]*$/
            });

        input.nextElementSibling.addEventListener("click", onAddButtonClick);

        function onAddButtonClick() {
            tagify.addEmptyTag();
        }

        input.addEventListener('change', onChange)

        function onChange(e) {
            if (e.target.value == "") {
                document.getElementById("Project_Tags").value = "";
            } else {
                document.getElementById("Project_Tags").value = JSON.parse(e.target.value)
                    .filter(function (x) {
                        if (x['value'] == "" || x['value'] == null) {
                            return false;
                        }
                        return true;
                    })
                    .map(function (item) {
                        return item['value'];
                    });
            }

        }

        var dragsort = new DragSort(tagify.DOM.scope,
            {
                selector: '.' + tagify.settings.classNames.tag,
                callbacks: {
                    dragEnd: onDragEnd
                }
            });

        function onDragEnd(elm) {
            tagify.updateValueByDOMTags()
        }
    </script>


    <script src="https://unpkg.com/@@popperjs/core@@2"></script>
    <script src="https://unpkg.com/tippy.js@@6"></script>

    <!-- Sent emails -->
    <script src="https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.4.0/js/dataTables.responsive.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#sentEmailTable').DataTable({
                proccessing: true,
                serverSide: true,
                responsive: true,
                fixedHeader: true,
                ajax: {
                    url: '?handler=SentEmails',
                    type: 'POST',
                    headers: { 'RequestVerificationToken': $('@Html.AntiForgeryToken()').val() },
                    data: function (d){
                        d.ProjectId = @Model.Project.Id
                    }
                },
                columnDefs: [
                    { "name": "Id", "data": "id", "targets": 0 },
                    { "name": "Template", "data": "templateId", "targets": 1, "orderable": false },
                    { "name": "Status", "data": "sent", "targets": 2, "orderable": false },
                    { "name": "ToAddresses", "data": "toAddresses", "targets": 3, "orderable": false, "searchable": true }
                ],
                order: [[0, "desc"]],
            });
        });
    </script>
}