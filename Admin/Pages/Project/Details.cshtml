@page "/Project/{id}"
@using Database.Models;
@using Microsoft.AspNetCore.Html;
@using Humanizer;
@model Admin.Pages.Project.DetailsModel
@{
    ViewData["Title"] = @Model.Project.Name;
}

@section Styles
{
    <style>
        .modal.modal-lg .modal-container {
            box-shadow: 0 0.2rem 0.5rem rgb(48 55 66 / 30%);
        }

        .modal.modal-lg .modal-overlay {
            opacity: 0.6;
        }
    </style>
}

<div class="sticky-header d-flex" id="page-header">
    <div>
        <h3 class="pb-0 m-0">@Model.Project.Name</h3>
        <p class="card-subtitle text-gray m-0">@Model.Project.SubHeading</p>
    </div>
    <a asp-page="/Project/Settings" asp-route-id="@Model.Project.Id" class="btn btn-link pt-0 pl-0 pb-0 pr-0">
        <ion-icon name="settings-outline" size="large"></ion-icon>
    </a>
</div>

<p>@(new HtmlString(CommonMark.CommonMarkConverter.Convert(Model.Project.Description)))</p>
<div>
    @foreach (string tag in Model.Project.Tags?.Split(",") ?? new string[0])
    {
        <span class="chip mb-2 mt-2 ml-0">@tag</span>
    }
</div>

<div class="clearfix mt-2">
    <a type="button" class="btn float-right mb-4 js-cd-panel-trigger cursor-pointer" data-panel="main">Create template</a>
</div>

@if (Model.Project.Templates.Any())
{
    <div class="accordian-table">
        <header>
            <p>Template</p>
            <p>Last edited</p>
        </header>
        <div class="accordion-wrapper">
            @foreach (TemplateTbl template in Model.Project.Templates)
            {
                <div class="accordion" id="template-@template.Id">
                    <input type="checkbox" id="@template.Id" name="accordion-checkbox" hidden>
                    <label class="accordion-header" for="@template.Id">
                        <i class="icon icon-arrow-right"></i>
                        <span class="ml-2 user-select-none">@template.Name</span>
                        <span class="text-capitalize user-select-none">@template.DateModified.Humanize()</span>
                        <div class="dropdown dropdown-right">
                            <button class="btn btn-action btn-link dropdown-toggle cursor-pointer" tabindex="0">
                                <i class="icon icon-more-vert"></i>
                            </button>
                            <ul class="menu submenu">
                                <li class="menu-item user-select-none"><a class="js-cd-panel-trigger edit-name cursor-pointer" data-panel="editName" data-templateId="@template.Id" data-templateName="@template.Name">Edit name</a></li>
                                <li class="menu-item user-select-none"><a class="js-cd-panel-trigger delete-template cursor-pointer" data-panel="delete" data-templateId="@template.Id" data-templateName="@template.Name">Delete</a></li>
                            </ul>
                        </div>
                    </label>
                    <div class="accordion-body">
                        <div>
                            <div class="d-flex align-items-center mb-2">
                                <span class="text-caption user-select-none">Temaplate ID: <span class="c-hand" Id="copy-@template.Id" onclick="copyId('copy-@template.Id', '@template.Id')">@template.Id</span></span>
                                <div class="popover popover-bottom ml-2 cursor-pointer">
                                    <ion-icon name="information-circle-outline" size="large"></ion-icon>
                                    <div class="popover-container">
                                        <div class="card">
                                            <div class="card-body">
                                                A template ID is the unique identifier for a template. It's most often used as part of an API call to identify which template should be used for an email request.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (template.Versions.Any())
                            {
                                <div class="clearfix">
                                    <a onclick="CreateNewTemplateVersion('@template.Id')" class="btn float-right">Add version</a>
                                </div>
                                <div class="template-version-table">
                                    <header>
                                        <p>Version</p>
                                        <p>Last edited</p>
                                    </header>
                                    <div class="row-container">

                                        @foreach (TemplateVersionTbl version in template.Versions)
                                        {
                                            <div class="row" id="version-@version.Id" data-templateId="@template.Id">
                                                <a asp-page="/Project/Template" asp-route-projectId="@Model.Project.Id" asp-route-templateId="@version.TemplateId" asp-route-versionId="@version.Id" class="overlay"></a>
                                                <div class="inner table-row">
                                                    <div class="square-image">
                                                        <img src="@version.ThumbnailImage" />
                                                    </div>
                                                    <span class="ml-2 user-select-none">
                                                        @version.Name
                                                        @if (version.IsActive)
                                                        {
                                                            <small class="label label-success">Active</small>
                                                        }
                                                    </span>
                                                    <span class="text-capitalize user-select-none">@version.DateModified.Humanize()</span>
                                                    <div class="dropdown dropdown-right">
                                                        <button class="btn btn-action btn-link dropdown-toggle cursor-pointer" tabindex="0">
                                                            <i class="icon icon-more-vert"></i>
                                                        </button>
                                                        <ul class="menu submenu">
                                                            @if (!version.IsActive)
                                                            {
                                                                <li class="menu-item user-select-none"><a class="cursor-pointer" onclick="MarkAsActive('@template.Id', '@version.Id')">Make active</a></li>
                                                            }
                                                            <li class="menu-item user-select-none"><a class="cursor-pointer" asp-page="/Project/Template" asp-route-projectId="@Model.Project.Id" asp-route-templateId="@version.TemplateId" asp-route-versionId="@version.Id">Edit</a></li>
                                                            @if (!string.IsNullOrEmpty(version.PreviewImage))
                                                            {
                                                                <li class="menu-item user-select-none"><a href="#preview" class="cursor-pointer" onclick="Preview('@version.PreviewImage', '@Model.Project.Id', '@version.TemplateId', '@version.Id')">Preview</a></li>
                                                            }
                                                            <li class="menu-item user-select-none"><a class="cursor-pointer" onclick="Duplicate('@template.Id', '@version.Id')">Duplicate</a></li>
                                                            <li class="menu-item user-select-none"><a class="js-cd-panel-trigger delete-template-version cursor-pointer" data-panel="deleteTemplateVersion" data-versionId="@version.Id" data-templateId="@template.Id" data-templateName="@version.Name">Delete</a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>

                                </div>
                            }
                            else
                            {
                                <div class="empty-template">
                                    <p class="text-caption">Add a version to this template in order to start editing its contents.</p>
                                    <a onclick="CreateNewTemplateVersion('@template.Id')" type="button" class="btn  float-right">Add version</a>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <form hidden method="post" asp-page-handler="CreateTemplateVersion" id="CreateTemplateVersionForm">
        @Html.HiddenFor(model => model.CreateTemplateVersion.TemplateId)
    </form>
    <form hidden method="post" asp-page-handler="MarkAsActive" id="MarkAsActiveForm">
        @Html.HiddenFor(model => model.MarkAsActive.ProjectId)
        @Html.HiddenFor(model => model.MarkAsActive.TemplateId)
        @Html.HiddenFor(model => model.MarkAsActive.VersionId)
    </form>
    <form hidden method="post" asp-page-handler="DuplicateTemplateVersion" id="DuplicateTemplateVersionForm">
        @Html.HiddenFor(model => model.DuplicateTemplateVersion.ProjectId)
        @Html.HiddenFor(model => model.DuplicateTemplateVersion.TemplateId)
        @Html.HiddenFor(model => model.DuplicateTemplateVersion.VersionId)
    </form>

    <div class="modal modal-lg" id="preview">
        <a class="modal-overlay" href="#modals" aria-label="Close"></a>
        <div class="modal-container" role="document">
            <div class="modal-header">
                <div class="template-navbar">
                    <div class="modal-title h5">Preview</div>
                    <a style="margin-left: auto" class="d-inline" href="#modals" aria-label="Close">
                        <ion-icon name="close-outline" size="large"></ion-icon>
                    </a>
                </div>

            </div>
            <div class="modal-body">
                <img id="preview-image" width="100%" />
            </div>
            <div class="modal-footer">
                <a class="btn btn-outline" id="preview-edit">Edit</a>
            </div>
        </div>
    </div>
}
else
{
    <div class="empty mt-2">
        <div class="empty-icon">
            <i class="icon icon-3x icon-mail"></i>
        </div>
        <p class="empty-title h5">Create your first template</p>
        <p class="empty-subtitle">Email templates allow you to start designing dynamic emails.</p>
        <div class="empty-action">
            <a type="button" class="btn js-cd-panel-trigger cursor-pointer" data-panel="main">Create template</a>
        </div>
    </div>
}

@section Panels
{
    @*Create template panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-main">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Create a new template</h3>
                <p>Give your new template a name. Template names are never public, are visible only to you and can be changed anytime.</p>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="CreateTemplate">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.CreateTemplate.ProjectId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" asp-for="CreateTemplate.Name">@Html.DisplayNameFor(model => model.CreateTemplate.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" asp-for="CreateTemplate.Name" placeholder="@Html.DisplayNameFor(model => model.CreateTemplate.Name)">
                            <span class="form-input-hint" asp-validation-for="CreateTemplate.Name"></span>
                        </div>
                    </div>
                    <button type="submit" id="createTemplateSubmitBtn" class="btn float-right" disabled>Create</button>
                </form>
            </div>
        </div>
    </div>

    @*Delete template panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-delete">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Delete template</h3>
                <p>Are you sure you want to delete this template?</p>
                <p>Deleting this tempalate would mean any email pending to send and or any future emails that are using this template would fail to send.</p>
                <p>To confirm the deletion of this template please re-enter the template name <strong>'<span id="deleteTemplate-name"></span>'</strong></p>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="DeleteTemplate">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.DeleteTemplate.ProjectId)
                        @Html.HiddenFor(model => model.DeleteTemplate.TemplateId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" for="deleteTemplateNameConfirmation">@Html.DisplayNameFor(model => model.UpdateTemplateName.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" id="deleteTemplateNameConfirmation" placeholder="@Html.DisplayNameFor(model => model.UpdateTemplateName.Name)">
                        </div>
                    </div>
                    <button type="submit" id="deleteTemplateSubmitBtn" class="btn float-right btn-outline-error">I understand the consequences, delete this template</button>
                </form>
            </div>
        </div>
    </div>

    @*Edit name panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-editName" id="EditNamePanel">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Edit name</h3>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="UpdateTemplateName">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.UpdateTemplateName.ProjectId)
                        @Html.HiddenFor(model => model.UpdateTemplateName.TemplateId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" asp-for="UpdateTemplateName.Name">@Html.DisplayNameFor(model => model.UpdateTemplateName.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" asp-for="UpdateTemplateName.Name" placeholder="@Html.DisplayNameFor(model => model.UpdateTemplateName.Name)">
                            <span class="form-input-hint" asp-validation-for="UpdateTemplateName.Name"></span>
                        </div>
                    </div>
                    <button type="submit" id="updateTmeplateNameSubmitBtn" class="btn float-right" disabled>Update</button>
                </form>
            </div>
        </div>
    </div>


    @*Delete template panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-deleteTemplateVersion">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Delete template</h3>
                <p>Are you sure you want to delete this template version?</p>
                <p>If this is the only version in the template or is the active version, any pending email or future emails using this template will fail to send.</p>
                <p>To confirm the deletion of this template version please re-enter the template version name <strong>'<span id="deleteTemplateVersion-name"></span>'</strong></p>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="DeleteTemplateVersion">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.DeleteTemplateVersion.ProjectId)
                        @Html.HiddenFor(model => model.DeleteTemplateVersion.TemplateId)
                        @Html.HiddenFor(model => model.DeleteTemplateVersion.VersionId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" for="deleteTemplateNameConfirmation">@Html.DisplayNameFor(model => model.UpdateTemplateName.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" id="deleteTemplateVersionNameConfirmation" placeholder="@Html.DisplayNameFor(model => model.UpdateTemplateName.Name)">
                        </div>
                    </div>
                    <button type="submit" id="deleteTemplateVersionSubmitBtn" class="btn float-right btn-outline-error">I understand the consequences, delete this template</button>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts
{
    <!-- Copy Ids -->
    <script>
            function copyId(elemantId, valueToCopy){
                copy(document.getElementById(elemantId), valueToCopy);
            }

            const copy = async (elemant, valueToCopy) => {
                try {
                    await navigator.clipboard.writeText(valueToCopy);

                    tippy(elemant, {
                        content: 'Copied!',
                        placement: 'top',
                        showOnCreate: true, 
                        arrow: false,
                        trigger: 'manual',
                        theme: 'customTheme'
                    });

                    setTimeout(function () {
                        var arr = document.querySelectorAll("[data-tippy-root]");
                        for (var i = 0; i < arr.length; i++) {
                            arr[i].remove();
                        }
                    }, 1000);
                } catch (err) {
                    console.error('Failed to copy: ', err);
                }
            }
    </script>
    @*Disable and enable create temaplate button*@
    <script>
        document.getElementById("CreateTemplate_Name").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "") {
                    document.getElementById("createTemplateSubmitBtn").disabled = true;
                } else {
                    document.getElementById("createTemplateSubmitBtn").disabled = false;
                }
            });
    </script>

    @*Trigger row to shake, indicating new entry*@
<script>
        $(document).one("scrollToId",
            function(event) {
                var scrollToId = null;
                @{
                    if (!string.IsNullOrWhiteSpace(TempData["scrollToId"]?.ToString()))
                    {
                        <text>scrollToId = "@TempData["scrollToId"]";</text>
                    }
                }

                if (scrollToId != null) {
                    if (scrollToId.includes("version")) {
                        var templateId = document.getElementById(scrollToId).getAttribute("data-templateId");
                        document.getElementById(templateId).checked = true;
                        document.getElementById(scrollToId).classList.remove('new-row');
                    }
                    // TODO: Fade to green
                    document.getElementById(scrollToId).classList.add('animate__animated', 'animate__headShake');
                }
            });
</script>

    <script>
        document.addEventListener("DOMContentLoaded",
            function() {
                var scrollToId = null;
                @{
                    if (!string.IsNullOrWhiteSpace(TempData["scrollToId"]?.ToString()))
                    {
                        <text>scrollToId = "@TempData["scrollToId"]";</text>
                    }
                }

                if (scrollToId != null) {
                    if (scrollToId.includes("version")) {
                        var templateId = document.getElementById(scrollToId).getAttribute("data-templateId");
                        document.getElementById(templateId).checked = true;
                        document.getElementById(scrollToId).classList.add('new-row');
                    }
                }
            });
    </script>

    @*Edit temaplate name*@
    <script>
        var updateTemplateName;
        document.querySelectorAll('.edit-name').forEach(item => {
            item.addEventListener('click',
                event => {
                    var templateId = item.getAttribute("data-templateId");
                    updateTemplateName = item.getAttribute("data-templateName");

                    document.getElementById("UpdateTemplateName_TemplateId").value = templateId;
                    document.getElementById("UpdateTemplateName_Name").value = updateTemplateName;

                    document.getElementById("updateTmeplateNameSubmitBtn").disabled = true;
                });
        });

        document.getElementById("UpdateTemplateName_Name").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim() == updateTemplateName) {
                    document.getElementById("updateTmeplateNameSubmitBtn").disabled = true;
                } else {
                    document.getElementById("updateTmeplateNameSubmitBtn").disabled = false;
                }
            });
    </script>

    @*Delete template*@
    <script>
        var updateTemplateName;
        document.querySelectorAll('.delete-template').forEach(item => {
            item.addEventListener('click',
                event => {
                    var templateId = item.getAttribute("data-templateId");
                    updateTemplateName = item.getAttribute("data-templateName");

                    document.getElementById("DeleteTemplate_TemplateId").value = templateId;
                    document.getElementById("deleteTemplate-name").textContent = updateTemplateName;

                    document.getElementById("deleteTemplateSubmitBtn").disabled = true;
                });
        });

        document.getElementById("deleteTemplateNameConfirmation").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim().toLowerCase() != updateTemplateName.toLowerCase()) {
                    document.getElementById("deleteTemplateSubmitBtn").disabled = true;
                } else {
                    document.getElementById("deleteTemplateSubmitBtn").disabled = false;
                }
            });
    </script>

    @*New template version*@
    <script>
        function CreateNewTemplateVersion(templateId) {
            document.getElementById("CreateTemplateVersion_TemplateId").value = templateId;
            document.getElementById("CreateTemplateVersionForm").submit();
        }
    </script>

    @*Make active*@
    <script>
        function MarkAsActive(templateId, versionId) {
            document.getElementById("MarkAsActive_TemplateId").value = templateId;
            document.getElementById("MarkAsActive_VersionId").value = versionId;
            document.getElementById("MarkAsActiveForm").submit();
        }
    </script>
    @*Duplicate*@
    <script>
        function Duplicate(templateId, versionId) {
            document.getElementById("DuplicateTemplateVersion_TemplateId").value = templateId;
            document.getElementById("DuplicateTemplateVersion_VersionId").value = versionId;
            document.getElementById("DuplicateTemplateVersionForm").submit();
        }
    </script>
    @*Delete template version*@
    <script>
        var deleteTemplateVersionName;

        document.querySelectorAll('.delete-template-version').forEach(item => {
            item.addEventListener('click',
                event => {
                    deleteTemplateVersionName = item.getAttribute("data-templateName");

                    document.getElementById("DeleteTemplateVersion_TemplateId").value = item.getAttribute("data-templateId");
                    document.getElementById("DeleteTemplateVersion_VersionId").value = item.getAttribute("data-versionId");
                    document.getElementById("deleteTemplateVersion-name").textContent = deleteTemplateVersionName;

                    document.getElementById("deleteTemplateVersionSubmitBtn").disabled = true;
                });
        });

        document.getElementById("deleteTemplateVersionNameConfirmation").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim().toLowerCase() != deleteTemplateVersionName.toLowerCase()) {
                    document.getElementById("deleteTemplateVersionSubmitBtn").disabled = true;
                } else {
                    document.getElementById("deleteTemplateVersionSubmitBtn").disabled = false;
                }
            });
    </script>

    @*Preview*@
    <script>
        function Preview(imageUrl, projectId, templateId, versionId) {
            document.getElementById("preview-image").src = imageUrl;
            document.getElementById("preview-edit").href = `/Project/${projectId}/Template/${templateId}/Version/${versionId}`;

        }
    </script>

    <script src="https://unpkg.com/@@popperjs/core@@2"></script>
    <script src="https://unpkg.com/tippy.js@@6"></script>
}