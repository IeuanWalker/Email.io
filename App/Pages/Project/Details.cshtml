@page "/Project/{id}"
@using Humanizer;
@model App.Pages.Project.DetailsModel
@{
    ViewData["Title"] = @Model.Project.Title;
}

@section Styles
{

}

<div class="sticky-header d-flex">
    <div>
        <h3 class="pb-0 m-0">@Model.Project.Title</h3>
        <p class="card-subtitle text-gray m-0">@Model.Project.SubHeading</p>
    </div>
    <a asp-page="/Project/Settings" asp-route-id="@Model.Project.Id" class="btn btn-link pt-0 pl-0 pb-0 pr-0">
        <ion-icon name="settings-outline" size="large"></ion-icon>
    </a>
</div>

<p>@Model.Project.Description</p>
<div class="d-flex align-items-center mb-2">
    <span class="text-caption"><span class="user-select-none">Project ID: </span>@Model.Project.Id</span>
    <div class="popover popover-bottom ml-2 cursor-pointer">
        <ion-icon name="information-circle-outline" size="large"></ion-icon>
        <div class="popover-container">
            <div class="card">
                <div class="card-body">
                    A project ID is the unique identifier for a project. It's most often used as part of an API call to validate the template ID used to identify the email to be sent.
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    @foreach (string tag in Model.Project.Tags?.Split(",") ?? new string[0])
    {
        <span class="chip mb-2 mt-2 ml-0">@tag</span>
    }
</div>



@if (Model.Project.Templates.Any())
{
    <div class="clearfix mt-2">
        <a type="button" class="btn float-right mb-4 js-cd-panel-trigger cursor-pointer" data-panel="main">Create template</a>
    </div>
}


@if (Model.Project.Templates.Any())
{
    <div class="accordian-table">
        <header>
            <p>Template</p>
            <p>Last edited</p>
        </header>
        <div class="accordion-wrapper">
            @foreach (var template in Model.Project.Templates)
            {
                <div class="accordion" id="template-@template.Id">
                    <input type="checkbox" id="@template.Id" name="accordion-checkbox" hidden>
                    <label class="accordion-header" for="@template.Id">
                        <i class="icon icon-arrow-right"></i>
                        <span class="ml-2 user-select-none">@template.Name</span>
                        <span class="text-capitalize user-select-none">@template.DateModified.Humanize()</span>
                        <div class="dropdown dropdown-right">
                            <button class="btn btn-action btn-link dropdown-toggle cursor-pointer" tabindex="0">
                                <i class="icon icon-more-vert"></i>
                            </button>
                            <ul class="menu">
                                <li class="menu-item user-select-none"><a class="js-cd-panel-trigger edit-name cursor-pointer" data-panel="editName" data-templateId="@template.Id" data-templateName="@template.Name">Edit name</a></li>
                                <li class="menu-item user-select-none"><a class="js-cd-panel-trigger delete-template cursor-pointer" data-panel="delete" data-templateId="@template.Id" data-templateName="@template.Name">Delete</a></li>
                            </ul>
                        </div>
                    </label>
                    <div class="accordion-body">
                        <div>
                            <div class="d-flex align-items-center mb-2">
                                <span class="text-caption"><span class="user-select-none">Temaplate ID: </span>@template.Id</span>
                                <div class="popover popover-bottom ml-2 cursor-pointer">
                                    <ion-icon name="information-circle-outline" size="large"></ion-icon>
                                    <div class="popover-container">
                                        <div class="card">
                                            <div class="card-body">
                                                A template ID is the unique identifier for a template. It's most often used as part of an API call to identify which template should be used for an email request.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="empty-template">
                                <p class="text-caption">Add a version to this template in order to start editing its contents.</p>
                                <a asp-page="/Template/Add" type="button" class="btn  float-right">Add version</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="empty mt-2">
        <div class="empty-icon">
            <i class="icon icon-3x icon-mail"></i>
        </div>
        <p class="empty-title h5">Create your first template</p>
        <p class="empty-subtitle">Email templates allow you to start designing dynamic emails.</p>
        <div class="empty-action">
            <a type="button" class="btn js-cd-panel-trigger cursor-pointer" data-panel="main">Create template</a>
        </div>
    </div>
}

@section Panels
{
    @*Create template panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-main">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Create a new template</h3>
                <p>Give your new template a name. Template names are never public, are visible only to you and can be changed anytime.</p>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="CreateTemplate">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.CreateTemplate.ProjectId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" asp-for="CreateTemplate.Name">@Html.DisplayNameFor(model => model.CreateTemplate.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" asp-for="CreateTemplate.Name" placeholder="@Html.DisplayNameFor(model => model.CreateTemplate.Name)">
                            <span class="form-input-hint" asp-validation-for="CreateTemplate.Name"></span>
                        </div>
                    </div>
                    <button type="submit" id="createTemplateSubmitBtn" class="btn float-right" disabled>Create</button>
                </form>
            </div>
        </div>
    </div>

    @*Delete template panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-delete">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Delete template</h3>
                <p>Are you sure you want to delete this template?</p>
                <p>Deleting this tempalate would mean any email pending to send and or any future emails that are using this template would fail to send.</p>
                <p>To confirm the deletion of this template please re-enter the template name <strong>'<span id="deleteTemplate-name"></span>'</strong></p>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="DeleteTemplate">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.DeleteTemplate.ProjectId)
                        @Html.HiddenFor(model => model.DeleteTemplate.TemplateId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" for="deleteTemplateNameConfirmation">@Html.DisplayNameFor(model => model.UpdateTemplateName.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" id="deleteTemplateNameConfirmation" placeholder="@Html.DisplayNameFor(model => model.UpdateTemplateName.Name)">
                        </div>
                    </div>
                    <button type="submit" id="deleteTemplateSubmitBtn" class="btn float-right btn-outline-error">I understand the consequences, delete this template</button>
                </form>
            </div>
        </div>
    </div>

    @*Edit name panel*@
    <div class="cd-panel cd-panel--from-right js-cd-panel-editName" id="EditNamePanel">
        <div class="cd-panel__container">
            <div class="cd-panel__content">
                <a href="#0" class="cd-panel__close js-cd-close">Close</a>
                <h3 class="s-title pb-0">Edit name</h3>
                <form class="form-horizontal" method="post" style="max-width: 800px" asp-page-handler="UpdateTemplateName">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.UpdateTemplateName.ProjectId)
                        @Html.HiddenFor(model => model.UpdateTemplateName.TemplateId)
                        <div class="col-3 col-sm-12">
                            <label class="form-label" asp-for="UpdateTemplateName.Name">@Html.DisplayNameFor(model => model.UpdateTemplateName.Name):</label>
                        </div>
                        <div class="col-9 col-sm-12">
                            <input class="form-input" type="text" asp-for="UpdateTemplateName.Name" placeholder="@Html.DisplayNameFor(model => model.UpdateTemplateName.Name)">
                            <span class="form-input-hint" asp-validation-for="UpdateTemplateName.Name"></span>
                        </div>
                    </div>
                    <button type="submit" id="updateTmeplateNameSubmitBtn" class="btn float-right" disabled>Update</button>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts
{
    @*Disable and enable create temaplate button*@
    <script>
        document.getElementById("CreateTemplate_Name").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "") {
                    document.getElementById("createTemplateSubmitBtn").disabled = true;
                } else {
                    document.getElementById("createTemplateSubmitBtn").disabled = false;
                }
            });
    </script>

    @*Trigger row to shake , indicating new entry*@
    <script>
        $(document).one("scrollToId",
            function(event) {
                var scrollToId = null;
                @{
                    if (!string.IsNullOrWhiteSpace(TempData["scrollToId"]?.ToString()))
                    {
                        <text>scrollToId = "@TempData["scrollToId"]";</text>
                    }
                }

                if (scrollToId != null) {
                    // TODO: Fade to green
                    document.getElementById(scrollToId).classList.add('animate__animated', 'animate__headShake');
                }
            });
    </script>

    @*Edit temaplate name*@
    <script>
        var updateTemplateName;
        document.querySelectorAll('.edit-name').forEach(item => {
            item.addEventListener('click', event => {
                var templateId = item.getAttribute("data-templateId");
                updateTemplateName = item.getAttribute("data-templateName");

                document.getElementById("UpdateTemplateName_TemplateId").value = templateId;
                document.getElementById("UpdateTemplateName_Name").value = updateTemplateName;

                document.getElementById("updateTmeplateNameSubmitBtn").disabled = true;
            });
        });

        document.getElementById("UpdateTemplateName_Name").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim() == updateTemplateName) {
                    document.getElementById("updateTmeplateNameSubmitBtn").disabled = true;
                } else {
                    document.getElementById("updateTmeplateNameSubmitBtn").disabled = false;
                }
            });
    </script>

    @*Delete template*@
    <script>
        var updateTemplateName;
        document.querySelectorAll('.delete-template').forEach(item => {
            item.addEventListener('click', event => {
                var templateId = item.getAttribute("data-templateId");
                updateTemplateName = item.getAttribute("data-templateName");

                document.getElementById("DeleteTemplate_TemplateId").value = templateId;
                document.getElementById("deleteTemplate-name").textContent = updateTemplateName;

                document.getElementById("deleteTemplateSubmitBtn").disabled = true;
            });
        });

        document.getElementById("deleteTemplateNameConfirmation").addEventListener('input',
            function (e) {
                if (e.target.value == null || e.target.value.trim() == "" || e.target.value.trim().toLowerCase() != updateTemplateName.toLowerCase()) {
                    document.getElementById("deleteTemplateSubmitBtn").disabled = true;
                } else {
                    document.getElementById("deleteTemplateSubmitBtn").disabled = false;
                }
            });
    </script>
}